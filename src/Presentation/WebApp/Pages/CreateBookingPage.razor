@page "/bookings/new/{ResourceId:guid}"
@attribute [Authorize]
@using Shared.DTOs.Booking
@using WebApp.Interfaces
@inject IWebAppBookingService BookingService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<PageTitle>Nowa rezerwacja</PageTitle>
<MudText Typo="Typo.h4" GutterBottom="true">Tworzenie nowej rezerwacji</MudText>

<BookingForm Model="newBooking" OnValidSubmit="HandleCreateBooking" ButtonText="Utwórz Rezerwację" />

@code {
    [Parameter]
    public Guid ResourceId { get; set; }

    private BookingRequestDto newBooking = new();

    protected override void OnInitialized()
    {
        newBooking.ResourceId = this.ResourceId;
    }

    private async Task HandleCreateBooking()
    {
        var result = await BookingService.CreateBookingAsync(newBooking); 
        
        if (result != null)
        {
            Snackbar.Add("Rezerwacja została utworzona!", Severity.Success);
            NavigationManager.NavigateTo("/my-reservations");
        }
        else
        {
            Snackbar.Add("Nie udało się utworzyć rezerwacji (konflikt terminów lub inny błąd).", Severity.Error);
        }
    }
}