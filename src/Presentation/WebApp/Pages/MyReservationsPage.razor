@* Plik: src/Presentation/WebApp/Pages/MyReservationsPage.razor *@
@page "/my-reservations"
@using System.Globalization
@attribute [Authorize]

@inject IBookingService BookingService
@inject ISnackbar Snackbar 
@inject NavigationManager NavigationManager

<MudText Typo="Typo.h4" GutterBottom="true">Moje Rezerwacje</MudText>

@if (_isLoading)
{
    <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
    <MudText>Ładowanie rezerwacji...</MudText>
}
else if (!string.IsNullOrEmpty(_errorMessage))
{
    <MudAlert Severity="Severity.Error">@_errorMessage</MudAlert>
}
else if (_myBookings == null || !_myBookings.Any())
{
    <MudText>Nie masz jeszcze żadnych rezerwacji.</MudText>
}
else
{
    <MudList T="BookingDto" Clickable="true">
    @for (int i = 0; i < _myBookings.Count; i++)
    {
        var booking = _myBookings[i];
        <MudListItem @key="booking.Id" OnClick="@(() => NavigateToBookingDetails(booking.Id))">
            <div class="d-flex flex-column">
                <MudText Typo="Typo.subtitle1"><b>@booking.ResourceName</b></MudText>
                <MudText Typo="Typo.body2">Od: @booking.StartTime.ToString("dd.MM.yyyy HH:mm", CultureInfo.CurrentCulture)</MudText>
                <MudText Typo="Typo.body2">Do: @booking.EndTime.ToString("dd.MM.yyyy HH:mm", CultureInfo.CurrentCulture)</MudText>
                <MudText Typo="Typo.caption">Status: @booking.Status</MudText>
                @if(!string.IsNullOrWhiteSpace(booking.Notes))
                {
                    <MudText Typo="Typo.caption" Class="mt-1"><i>Notatki: @booking.Notes</i></MudText>
                }
            </div>
        </MudListItem>
        @if (i < _myBookings.Count - 1)
        {
            <MudDivider />
        }
    }
</MudList>
}
@code {
    private List<BookingDto>? _myBookings;
    private bool _isLoading = true;
    private string? _errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _isLoading = true;
            _myBookings = await BookingService.GetMyBookingsAsync();
        }
        catch (Exception ex)
        {
            _errorMessage = $"Wystąpił błąd podczas pobierania rezerwacji: {ex.Message}";
            Snackbar.Add(_errorMessage, Severity.Error);
        }
        finally
        {
            _isLoading = false;
        }
    }

    private void NavigateToBookingDetails(Guid bookingId)
    {
        NavigationManager.NavigateTo($"/booking/{bookingId}");
    }
}